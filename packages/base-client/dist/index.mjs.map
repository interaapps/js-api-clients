{"version":3,"file":"index.mjs","sources":["../index.ts"],"sourcesContent":["import axios, {Axios} from \"axios\";\n\nexport class UnkownException extends Error {\n}\n\nexport class BaseClient extends Axios {\n    registeredExceptions: Record<string, ({new(t: any): Error})> = {}\n\n    constructor(baseURL?: string) {\n        super();\n\n        this.defaults = {\n            ...axios.defaults,\n            baseURL\n        }\n\n        this.defaults.baseURL = baseURL\n        this.interceptors.response.use((response) => {\n            if (typeof response.data === 'string') {\n                try {\n                    if (response.headers['content-type'] !== 'text/plain') {\n                        response.data = JSON.parse(response.data)\n                    }\n                } catch (e) {\n                    console.log(e)\n                }\n            }\n\n            if (!(response.status >= 200 && response.status < 300)) {\n                const error = this.registeredExceptions[response.data.exception]\n                if (error) {\n                    throw new error(response.data)\n                } else {\n                    throw new UnkownException('Unkown Error', response.data)\n                }\n            }\n            return response\n        })\n    }\n\n    fork(baseClient: BaseClient) {\n        this.defaults = baseClient.defaults;\n        this.interceptors = baseClient.interceptors;\n        return this;\n    }\n\n    setBaseURL(baseURL: string) {\n        this.defaults.baseURL = baseURL\n        return this;\n    }\n\n    setHeader(key: string, value: string) {\n        this.defaults.headers.common[key] = value\n        return this;\n    }\n\n    setBearerToken(token: string) {\n        if (!token) return this.removeBearerToken()\n        this.setHeader('Authorization', `Bearer ${token}`)\n        return this;\n    }\n\n    removeHeader(key: string) {\n        delete this.defaults.headers.common[key]\n        return this;\n    }\n\n    removeBearerToken() {\n        delete this.defaults.headers.common['Authorization']\n        return this;\n    }\n}"],"names":[],"mappings":";;AAEM,MAAO,eAAgB,SAAQ,KAAK,CAAA;AACzC;AAEK,MAAO,UAAW,SAAQ,KAAK,CAAA;IACjC,oBAAoB,GAA2C,EAAE;AAEjE,IAAA,WAAA,CAAY,OAAgB,EAAA;AACxB,QAAA,KAAK,EAAE;QAEP,IAAI,CAAC,QAAQ,GAAG;YACZ,GAAG,KAAK,CAAC,QAAQ;YACjB;SACH;AAED,QAAA,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,OAAO;QAC/B,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,QAAQ,KAAI;AACxC,YAAA,IAAI,OAAO,QAAQ,CAAC,IAAI,KAAK,QAAQ,EAAE;AACnC,gBAAA,IAAI;oBACA,IAAI,QAAQ,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,YAAY,EAAE;wBACnD,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC;;;gBAE/C,OAAO,CAAC,EAAE;AACR,oBAAA,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;;;AAItB,YAAA,IAAI,EAAE,QAAQ,CAAC,MAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,MAAM,GAAG,GAAG,CAAC,EAAE;AACpD,gBAAA,MAAM,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;gBAChE,IAAI,KAAK,EAAE;AACP,oBAAA,MAAM,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC;;qBAC3B;oBACH,MAAM,IAAI,eAAe,CAAC,cAAc,EAAE,QAAQ,CAAC,IAAI,CAAC;;;AAGhE,YAAA,OAAO,QAAQ;AACnB,SAAC,CAAC;;AAGN,IAAA,IAAI,CAAC,UAAsB,EAAA;AACvB,QAAA,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ;AACnC,QAAA,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,YAAY;AAC3C,QAAA,OAAO,IAAI;;AAGf,IAAA,UAAU,CAAC,OAAe,EAAA;AACtB,QAAA,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,OAAO;AAC/B,QAAA,OAAO,IAAI;;IAGf,SAAS,CAAC,GAAW,EAAE,KAAa,EAAA;QAChC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK;AACzC,QAAA,OAAO,IAAI;;AAGf,IAAA,cAAc,CAAC,KAAa,EAAA;AACxB,QAAA,IAAI,CAAC,KAAK;AAAE,YAAA,OAAO,IAAI,CAAC,iBAAiB,EAAE;QAC3C,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,CAAU,OAAA,EAAA,KAAK,CAAE,CAAA,CAAC;AAClD,QAAA,OAAO,IAAI;;AAGf,IAAA,YAAY,CAAC,GAAW,EAAA;QACpB,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC;AACxC,QAAA,OAAO,IAAI;;IAGf,iBAAiB,GAAA;QACb,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,eAAe,CAAC;AACpD,QAAA,OAAO,IAAI;;AAElB;;;;"}