{"version":3,"file":"index.mjs","sources":["../index.ts"],"sourcesContent":["import { BaseClient } from '@interaapps/base-client';\nexport * from './exceptions'\nimport * as exceptions from \"./exceptions\";\nimport {CreatePasteRequest, EditPasteRequest, Paste} from \"./types/paste\";\nimport {CreateFolderRequest, Folder} from \"./types/folder\";\nimport {EditUser, User, UserAsAdmin, UserOverview} from \"./types/user\";\nimport {Tag} from \"./types/tags\";\nimport {Filters, PasteFilters} from \"./types/general\";\nimport {ApiKey} from \"./types/keys\";\n\nexport * from './types/paste'\nexport * from './types/user'\nexport * from './types/tags'\nexport * from './types/folder'\nexport * from './types/general'\n\nexport class PastefyClient extends BaseClient {\n    constructor(apiToken: string|undefined = undefined, baseURL: string = 'https://pastefy.app') {\n        super(`${baseURL}/api/v2`);\n        this.registeredExceptions = exceptions\n        if (apiToken) this.setBearerToken(apiToken)\n    }\n\n    setApiToken(token: string) {\n        this.setBearerToken(token)\n        return this;\n    }\n\n    async createPaste(paste: CreatePasteRequest) {\n        return (await this.post('/paste', paste)).data.paste as Paste\n    }\n\n    async editPaste(id: string, paste: EditPasteRequest) {\n        await this.put(`/paste/${id}`, paste)\n    }\n\n    async getPastes(query: PasteFilters) {\n        return (await this.get(`/paste`, {params: query})).data as Paste\n    }\n    async getPaste(id: string, query: {from_frontend?: boolean} = {}) {\n        return (await this.get(`/paste/${id}`, {params: query})).data as Paste\n    }\n\n    async deletePaste(id: string) {\n        await this.delete(`/paste/${id}`)\n    }\n\n    async starPaste(id: string) {\n        await this.post(`/paste/${id}/star`)\n    }\n\n    async unstarPaste(id: string) {\n        await this.delete(`/paste/${id}/star`)\n    }\n\n    async getPublicPastes(query: PasteFilters = {}) {\n        return (await this.get(`/public-pastes`, {params: query})).data as Paste[]\n    }\n\n    async getPublicTrendingPastes(query: PasteFilters & {trending?: boolean} = {}) {\n        return (await this.get(`/public-pastes/trending`, {params: query})).data as Paste[]\n    }\n    async getLatestPublicPastes(query: PasteFilters = {}) {\n        return (await this.get(`/public-pastes/latest`, {params: query})).data as Paste[]\n    }\n\n    async getPasteRaw(id: string, query: {part?: string} = {}) {\n        return (await this.get(`/paste/${id}/raw`, {params: query})).data as string\n    }\n\n    async createFolder(folder: CreateFolderRequest) {\n        return (await this.post('/folder', folder)).data.folder as Folder\n    }\n    async getFolder(id: string, query: {\n        hide_children?: boolean\n    } = {}) {\n        return (await this.get(`/folder/${id}`)).data as Folder\n    }\n\n    async getFolders(query: Filters = {}) {\n        return (await this.get(`/folder`, {params: query})).data as Folder[]\n    }\n\n    async getPublicUser(id: string) {\n        return (await this.get(`/public/user/${id}`)).data as UserAsAdmin\n    }\n\n    async getUser(id: string) {\n        return (await this.get(`/admin/users/${id}`)).data as UserAsAdmin\n    }\n\n    async deleteUser(id: string) {\n        await this.delete(`/admin/users/${id}`)\n    }\n\n    async editUser(id: string, user: EditUser) {\n        await this.put(`/admin/users/${id}`, user)\n    }\n\n    async getUsers(username: string) {\n        return (await this.get(`/admin/users`)).data as UserAsAdmin[]\n    }\n\n    async getTags(query: Filters = {}) {\n        return (await this.get(`/tags`)).data as Tag[]\n    }\n\n    async getTag(id: string) {\n        return (await this.get(`/tags/${id}`)).data as Tag\n    }\n\n    async createApiKey() {\n        return (await this.post(`/user/keys`)).data as ApiKey\n    }\n    async getApiKeys() {\n        return (await this.get(`/user/keys`)).data as string[]\n    }\n    async deleteApiKey(id: string) {\n        await this.delete(`/user/keys/${id}`)\n    }\n\n    async getCurrentUser() {\n        return (await this.get(`/user`)).data as User\n    }\n\n    async getUserOverview() {\n        return (await this.get(`/user/overview`)).data as UserOverview\n    }\n\n    async getUserPastes(query: PasteFilters = {}) {\n        return (await this.get(`/user/pastes`, {params: query})).data as Paste[]\n    }\n\n    async getStarredPastes(query: PasteFilters = {}) {\n        return (await this.get(`/user/starred-pastes`, {params: query})).data as Paste[]\n    }\n\n    async getUserFolders(query: Record<string, any> = {}) {\n        return (await this.get(`/user/folders`, {params: query})).data as Folder[]\n    }\n}"],"names":[],"mappings":"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"}